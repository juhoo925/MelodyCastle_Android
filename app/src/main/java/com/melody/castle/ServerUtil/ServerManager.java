package com.melody.castle.ServerUtil;import java.util.HashMap;public class ServerManager {	public static final String FOOTBALL_COOKIE_KEY = "mobile.football.cookie";	//	public static final String FOOTBALL_SERVER_ADRESS = "http://www.football.lottery";	public static final String FOOTBALL_SERVER_ADRESS = "http://192.168.114.91/football";		public static final String FOOTBALL_SERVER_URL = FOOTBALL_SERVER_ADRESS + "/api/";	public static final String FOOTBALL_UPLOAD_URL = FOOTBALL_SERVER_ADRESS + "/assets/images";	public static final String FOOTBALL_TOUR_IMG_URL   = FOOTBALL_UPLOAD_URL + "/tournament";	public static final String FOOTBALL_TEAM_IMG_URL   = FOOTBALL_UPLOAD_URL + "/team";	public static final String FOOTBALL_PLAYER_IMG_URL = FOOTBALL_UPLOAD_URL + "/player";	public static final String FOOTBALL_AVATAR_IMG_URL = FOOTBALL_UPLOAD_URL + "/avatars";	public static final String FOOTBALL_LOGO_IMG_URL   = FOOTBALL_UPLOAD_URL + "/logos";	public static final String COMMAND_ACTION_LOGIN             = "login";	public static final String COMMAND_ACTION_LOGOUT            = "logout";	public static final String COMMAND_ACTION_REGISTER          = "registerUser";	public static final String COMMAND_ACTION_UPDATEUSER        = "updateUser";	public static final String COMMAND_ACTION_CONFIRMEMAIL      = "confirmEmail";	public static final String COMMAND_ACTION_FORGOTPASSWORD    = "forgotPassword";	public static final String COMMAND_ACTION_UPDATEPASSWORD    = "updatePassword";	public static final String COMMAND_ACTION_REGISTERPUSHKET   = "registerPushkey";	public static final String COMMAND_ACTION_TOURNAMENTS       = "tournaments";	public static final String COMMAND_ACTION_TEAMS             = "teams";	public static final String COMMAND_ACTION_TEAMRESULTS       = "team_result";	public static final String COMMAND_ACTION_TEAMSCORE         = "team_score";	public static final String COMMAND_ACTION_PLAYER            = "player";	public static final String COMMAND_ACTION_PLAYERDETAIL      = "player_detail";	public static final String COMMAND_ACTION_FIXTURE           = "fixture";	public static final String COMMAND_ACTION_RESULT            = "result";	public static final String COMMAND_ACTION_VIDEO             = "video";	public static final String COMMAND_ACTION_LOTTERY_LIST      = "lotterylist";	public static final String COMMAND_ACTION_LOTTERY_ITEM      = "lotteryitem";	public static final String COMMAND_ACTION_MYLOTTERY         = "mylottery";	public static final String COMMAND_ACTION_LOTTERYWIZARD     = "lottery_wizard";	public static final String COMMAND_ACTION_LOTTERYCOMPLETE   = "lottery_complete";	private static void sendRqeust(HashMap<String, String> params, String command, String method, ResultCallBack callBack) {				if( NetworkUtils.isInternateAvaliable() == false )		{			ServerTask task = new ServerTask(method, command, callBack, params);			task.execute("");		}	}		public static void doLogin(String email, String passwd, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("email", email);		map.put("password", passwd);		sendRqeust(map, COMMAND_ACTION_LOGIN, "GET", callBack);	}		public static void doLogout(String token, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		sendRqeust(map, COMMAND_ACTION_LOGOUT, "GET", callBack);	}		public static void register(String email, String username, String password, String phone,								String paypal, String country, String lang, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("email", email);		map.put("username", username);		map.put("password", password);		if ( phone == null ) {			phone = "";		}		map.put("phone", phone);		if ( paypal == null ) {			paypal = "";		}		map.put("paypal", paypal);		if ( country == null ) {			country = "";		}		map.put("country", country);		if ( lang == null ) {			lang = "";		}		map.put("lang", lang);		map.put("device", "1");		sendRqeust(map, COMMAND_ACTION_REGISTER, "POST", callBack);	}	public static void updateUser(String uid, String token, String email, String username, String password, String phone,								  String paypal, String country, String lang, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("uid", uid);		map.put("token", token);		map.put("email", email);		map.put("username", username);		map.put("password", password);		if ( phone == null ) {			phone = "";		}		map.put("phone", phone);		if ( paypal == null ) {			paypal = "";		}		map.put("paypal", paypal);		if ( country == null ) {			country = "";		}		map.put("country", country);		if ( lang == null ) {			lang = "";		}		map.put("lang", lang);		map.put("device", "1");		sendRqeust(map, COMMAND_ACTION_UPDATEUSER, "POST", callBack);	}	public static void confirmEmail(String email, String vcode, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("email", email);		map.put("vcode", vcode);		sendRqeust(map, COMMAND_ACTION_CONFIRMEMAIL, "POST", callBack);	}	public static void forgotPassword(String email, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("email", email);		sendRqeust(map, COMMAND_ACTION_FORGOTPASSWORD, "POST", callBack);	}	public static void updatePassword(String uid, String password, String confirmpw, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("uid", uid);		map.put("password", password);		map.put("confirmpw", confirmpw);		sendRqeust(map, COMMAND_ACTION_UPDATEPASSWORD, "POST", callBack);	}	public static void registerPushkey(String token, String pushkey, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("pushkey", pushkey);		sendRqeust(map, COMMAND_ACTION_REGISTERPUSHKET, "POST", callBack);	}	public static void getTournaments(String token, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		sendRqeust(map, COMMAND_ACTION_TOURNAMENTS, "GET", callBack);	}	public static void getTeams(String token, String tour, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("tour", tour);		sendRqeust(map, COMMAND_ACTION_TEAMS, "GET", callBack);	}	public static void getTeamResults(String token, String teamId, String stage, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("team", teamId);		map.put("stage", stage);		sendRqeust(map, COMMAND_ACTION_TEAMRESULTS, "GET", callBack);	}	public static void getTeamScore(String token, String matchId, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("match", matchId);		sendRqeust(map, COMMAND_ACTION_TEAMSCORE, "GET", callBack);	}	public static void getPlayers(String token, String teamId, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("team", teamId);		sendRqeust(map, COMMAND_ACTION_PLAYER, "GET", callBack);	}	public static void getPlayerDetails(String token, String playerId, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("player", playerId);		sendRqeust(map, COMMAND_ACTION_PLAYERDETAIL, "GET", callBack);	}	public static void getSchedule(String token, String tour, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("tour", tour);		sendRqeust(map, COMMAND_ACTION_FIXTURE, "GET", callBack);	}	public static void getResults(String token, String tour, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("tour", tour);		sendRqeust(map, COMMAND_ACTION_RESULT, "GET", callBack);	}	public static void getVideo(String token, String tour, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("token", token);		map.put("tour", tour);		sendRqeust(map, COMMAND_ACTION_VIDEO, "GET", callBack);	}	public static void getLotteryItem(String uid, String token, String tour, String stage, String gameId, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("uid", uid);		map.put("token", token);		map.put("tour", tour);		map.put("stage", stage);		map.put("game_id", gameId);		sendRqeust(map, COMMAND_ACTION_LOTTERY_ITEM, "GET", callBack);	}	public static void getLotteryList(String uid, String token, String tour, String stage, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("uid", uid);		map.put("token", token);		map.put("tour", tour);		map.put("stage", stage);		sendRqeust(map, COMMAND_ACTION_LOTTERY_LIST, "GET", callBack);	}	public static void getMyLottery(String uid, String token, String tour, String stage, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("uid", uid);		map.put("token", token);		map.put("tour", tour);		map.put("stage", stage);		sendRqeust(map, COMMAND_ACTION_MYLOTTERY, "GET", callBack);	}	public static void getLotteryWizard(String uid, String token, String tour, String gameId, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("uid", uid);		map.put("token", token);		map.put("tour", tour);		map.put("game_id", gameId);		sendRqeust(map, COMMAND_ACTION_LOTTERYWIZARD, "GET", callBack);	}	public static void completeLottery(String uid, String token, String tour, String stage, String match,									   String payment, String level, String win, String team1Score, String team2Score,									   String first1_score, String first2_score, String second1_score, String second2_score,									   String extra_first1_score, String extra_first2_score, String extra_second1_score, String extra_second2_score,									   String penal1_score, String penal2_score, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("uid", uid);		map.put("token", token);		map.put("tour", tour);		map.put("stage", stage);		map.put("match", match);		map.put("payment", payment);		map.put("level", level);		map.put("win", win);		map.put("team1_score", team1Score);		map.put("team2_score", team2Score);		map.put("first1_score", first1_score);		map.put("first2_score", first2_score);		map.put("second1_score", second1_score);		map.put("second2_score", second2_score);		map.put("extra_first1_score", extra_first1_score);		map.put("extra_first2_score", extra_first2_score);		map.put("extra_second1_score", extra_second1_score);		map.put("extra_second2_score", extra_second2_score);		map.put("penal1_score", penal1_score);		map.put("penal2_score", penal2_score);		sendRqeust(map, COMMAND_ACTION_LOTTERYCOMPLETE, "POST", callBack);	}	public static  void upLoad(String pathToOurFile, String userID, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("userid", userID);				UpLoadFileTask task = new UpLoadFileTask(FOOTBALL_UPLOAD_URL, map, null, callBack);		task.execute(pathToOurFile);	}	public static  void download(String localpath, String userID, ResultCallBack callBack) {		HashMap<String, String> map = new HashMap<String, String>();		map.put("userid", userID);		UpLoadFileTask task = new UpLoadFileTask(FOOTBALL_UPLOAD_URL, map, null, callBack);		task.execute(localpath);	}}